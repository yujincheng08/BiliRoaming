apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.protobuf'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "me.iacn.biliroaming"
        minSdkVersion 21
        targetSdkVersion 30  // Target Android R
        versionCode appVerCode.toInteger()
        versionName appVerName
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (variant.buildType.name == 'release') {
                outputFileName = "BiliRoaming_${defaultConfig.versionName}.apk"
            }
        }
    }

    sourceSets {
        main {
            proto {
                srcDir 'src/main/proto'
                include '**/*.proto'
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/**'
        exclude 'kotlin/**'
        exclude 'google/**'
        exclude '**.bin'
    }

    aaptOptions {
        additionalParameters "--preferred-density", "xxxhdpi"
        additionalParameters '--allow-reserved-package-id', '--package-id', '0x23'
    }

    lintOptions {
        checkReleaseBuilds false
    }

    dependenciesInfo {
        includeInApk false
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.15.6'
    }

    generatedFilesBaseDir = "$projectDir/src/generated"

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.builtins {
                java {
                    option "lite"
                }
            }
        }
    }
}


dependencies {
    compileOnly 'de.robv.android.xposed:api:82'
    compileOnly 'de.robv.android.xposed:api:82:sources'
    implementation 'com.google.protobuf:protobuf-javalite:3.15.6'
    compileOnly 'com.google.protobuf:protoc:3.15.6'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.3'
    implementation 'androidx.documentfile:documentfile:1.0.1'
}

afterEvaluate {
    installDebug.doLast {
        restartBiliBili()
    }
    shrinkReleaseRes.doLast {
        optimizeReleaseRes()
    }
}

def restartBiliBili() {
    exec {
        commandLine android.adbExecutable, 'shell', 'am', 'force-stop', 'tv.danmaku.bili'
    }
    exec {
        commandLine android.adbExecutable, 'shell', 'monkey', '-p', 'tv.danmaku.bili', '1'
    }
}

import java.nio.file.Paths

def optimizeReleaseRes() {
    def aapt2 = Paths.get(project.android.sdkDirectory.path,
            "build-tools", project.android.buildToolsVersion, "aapt2")
    def zip = Paths.get(project.buildDir.path, "intermediates",
            "shrunk_processed_res", "release", "resources-release-stripped.ap_")
    def optimized = new File("${zip}.opt")
    def cmd = exec {
        commandLine(aapt2, "optimize", "--collapse-resource-names",
                "--shorten-resource-paths", "-o", optimized, zip)
        setIgnoreExitValue true
    }
    if (cmd.exitValue == 0) {
        zip.toFile().delete()
        optimized.renameTo(zip.toFile())
    }
}
